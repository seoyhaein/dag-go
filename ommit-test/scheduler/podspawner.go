package scheduler

// executor 에서 RunE 를 실행할때, 여기서 api 를 호출하는 형태로 해야함. 지금은 바로 연결을 하지만, 내부적으로 향후 grpc 로 연결을 하려고함.
// RunE 형태의 설계 방향은 client 즉, executor 에서는 단일한 형태로 가지만, 서버쪽에서는 세부적으로 다양하게 api 들이 들어갈 수 있는 형태로 가야할 것 같다.
// Pod 만들기, 호스트 overlay, 컨테이너 만들기, 리소스 해제 등등의 api 들이 들어갈 수 있을 것 같다.
// podspawner.go 에서는 podbridge5 내용이 들어와야 하는 구조이다.
// 디스패처, 액터 모델 생각해보기.
// 메세지 형태로 전송하고 이것을 받아서 처리하는 형태로 간다.
